{"version":3,"sources":["Position.js","App.js","serviceWorker.js","index.js"],"names":["Position","props","x1","y1","x2","y2","x3","y3","x4","y4","low","sellOptionStrike","high","buyOptionStrike","valueAtExpiration","price","sellOptionPrice","butOptionPrice","yourCredit","maxLossWithCredit","x","px","py","config","data","array","myprice","push","toString","value","makeData","height","xField","yField","annotations","type","start","end","style","stroke","lineDash","className","onBack","title","subTitle","size","column","Item","label","layout","labelCol","span","wrapperCol","App","onFinish","values","st","op","bl","cp","forceUpdate","gutter","initialValues","name","this","formatter","replace","offset","htmlType","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gRAgKeA,EA/IY,SAACC,GAI1B,IAhBwBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAgB9CC,EAA+B,GAAzBT,EAAMU,iBACZC,EAA+B,IAAxBX,EAAMY,gBAEbC,EAAoB,SAACC,GACzB,OAGI,OAFCA,EAAQd,EAAMU,iBAAmBI,EAAQd,EAAMU,iBAAmB,IAClEI,EAAQd,EAAMY,gBAAkBE,EAAQd,EAAMY,gBAAkB,IAElB,KAAhDZ,EAAMe,gBAAkBf,EAAMgB,iBAiB/BC,EAA8D,KAAhDjB,EAAMe,gBAAkBf,EAAMgB,gBAC5CE,EACkD,MAAlDlB,EAAMY,gBAAkBZ,EAAMU,kBACiB,KAAhDV,EAAMe,gBAAkBf,EAAMgB,gBAE7BG,GA9CoBlB,EA+CtB,EA/C0BC,EAgD1B,EAhD8BC,EAiD9B,IAjDkCC,EAkDlC,EAlDsCC,EAmDtCL,EAAMU,iBAnDoCJ,EAoD1CW,EApD8CV,EAqD9CP,EAAMY,gBA5CD,CAAEQ,KAPLnB,EAAKG,EAAKF,EAAKC,IAAOE,EAAKE,IAAON,EAAKE,IAAOE,GAFEG,EAsDlDU,GApD0DZ,EAAKC,MAC7DN,EAAKE,IAAOG,EAAKE,IAAON,EAAKE,IAAOC,EAAKE,IAMhCc,KAJTpB,EAAKG,EAAKF,EAAKC,IAAOG,EAAKE,IAAON,EAAKE,IAAOC,EAAKG,EAAKF,EAAKC,MAC7DN,EAAKE,IAAOG,EAAKE,IAAON,EAAKE,IAAOC,EAAKE,MAmDzCe,EAAS,CACXC,KA9Be,WAEf,IADA,IAAIC,EAAQ,GACHV,EAAc,IAANL,EAAWK,EAAe,IAAPH,IAAcG,EAAO,CACvD,IAAIW,EAAUX,EAAQ,IAEtBU,EAAME,KAAK,CACTZ,MAAOW,EAAQE,WACfC,MAAOf,EAAkBY,KAG7B,OAAOD,EAoBDK,GACNC,OAAQ,IACRC,OAAQ,QACRC,OAAQ,QACRC,YAAa,CACX,CACEC,KAAM,OAENC,MAAO,CAAC,MAAO,GACfC,IAAK,CAAC,MAAO,GAEbC,MAAO,CACLC,OAAQ,UACRC,SAAU,CAAC,EAAG,OAMtB,OACE,mCACE,eAAC,IAAD,CACEC,UAAU,8BACVC,OAAQ,aACRC,MAAM,QACNC,SAAS,qBAJX,UAME,eAAC,IAAD,CAAcC,KAAK,SAASC,OAAQ,EAApC,UACE,cAAC,IAAaC,KAAd,CAAmBC,MAAM,qBAAzB,SACG/C,EAAMU,mBAET,cAAC,IAAaoC,KAAd,CAAmBC,MAAM,oBAAzB,SACG/C,EAAMe,kBAET,cAAC,IAAa+B,KAAd,CAAmBC,MAAM,oBAAzB,SACG/C,EAAMY,kBAET,cAAC,IAAakC,KAAd,CAAmBC,MAAM,mBAAzB,SACG/C,EAAMgB,iBAGT,cAAC,IAAa8B,KAAd,CAAmBC,MAAM,YAAzB,SAAsC5B,EAAEC,QAG1C,uBAEA,oDACA,uBACA,eAAC,IAAD,CAAcwB,KAAK,SAASC,OAAQ,EAApC,UACE,cAAC,IAAaC,KAAd,CAAmBC,MAAM,yBAAzB,SACsD,KAAlD/C,EAAMY,gBAAkBZ,EAAMU,oBAElC,cAAC,IAAaoC,KAAd,CAAmBC,MAAM,cAAzB,SACoD,KAAhD/C,EAAMe,gBAAkBf,EAAMgB,kBAElC,cAAC,IAAa8B,KAAd,CAAmBC,MAAM,uBAAzB,SACuD,MAAlD/C,EAAMY,gBAAkBZ,EAAMU,kBACkB,KAAhDV,EAAMe,gBAAkBf,EAAMgB,qBAmCrC,cAAC,IAAD,eAAUM,U,sDCnJZ0B,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KA2IPE,EA7Hf,kDACE,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IAORqD,SAAW,SAACC,GACV,EAAK5C,iBAAmB4C,EAAOC,GAC/B,EAAKxC,gBAAkBuC,EAAOE,GAC9B,EAAK5C,gBAAkB0C,EAAOG,GAC9B,EAAKzC,eAAiBsC,EAAOI,GAG3B,EAAKhD,kBACL,EAAKK,iBACL,EAAKH,iBACL,EAAKI,gBAEL,EAAK2C,eAlBP,EAAKjD,iBAAmB,KACxB,EAAKK,gBAAkB,KACvB,EAAKH,gBAAkB,KACvB,EAAKI,eAAiB,KALL,EADrB,qDA0BI,OACE,8BACE,cAAC,IAAD,CAAK4C,OAAQ,GAAb,SACE,eAAC,IAAD,CAAKpB,UAAU,aAAaU,KAAM,GAAlC,UACE,cAAC,IAAD,UACE,eAAC,IAAD,2BACMF,GADN,IAEEa,cAAe,CACbN,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KAENI,KAAK,gBACLT,SAAUU,KAAKV,SATjB,UAWE,cAAC,IAAKP,KAAN,CAAWgB,KAAK,KAAKf,MAAM,qBAA3B,SACE,cAAC,IAAD,CACEiB,UAAW,SAACpC,GAAD,MACT,YAAKA,GAAQqC,QAAQ,wBAAyB,UAMpD,cAAC,IAAKnB,KAAN,CAAWgB,KAAK,KAAKf,MAAM,oBAA3B,SACE,cAAC,IAAD,CACEiB,UAAW,SAACpC,GAAD,MACT,YAAKA,GAAQqC,QAAQ,wBAAyB,UAOpD,cAAC,IAAKnB,KAAN,CAAWgB,KAAK,KAAKf,MAAM,oBAA3B,SACE,cAAC,IAAD,CACEiB,UAAW,SAACpC,GAAD,MACT,YAAKA,GAAQqC,QAAQ,wBAAyB,UAMpD,cAAC,IAAKnB,KAAN,CAAWgB,KAAK,KAAKf,MAAM,mBAA3B,SACE,cAAC,IAAD,CACEiB,UAAW,SAACpC,GAAD,MACT,YAAKA,GAAQqC,QAAQ,wBAAyB,UAepD,cAAC,IAAKnB,KAAN,CAAWK,WAAU,2BAAOH,EAAOG,YAAd,IAA0Be,OAAQ,IAAvD,SACE,cAAC,IAAD,CAAQhC,KAAK,UAAUiC,SAAS,SAAhC,4BAMN,uBACA,cAAC,IAAD,UACGJ,KAAKrD,kBACJqD,KAAKhD,iBACLgD,KAAKnD,iBACLmD,KAAK/C,gBACH,cAAC,EAAD,CACEN,iBAAkBqD,KAAKrD,iBACvBK,gBAAiBgD,KAAKhD,gBACtBH,gBAAiBmD,KAAKnD,gBACtBI,eAAgB+C,KAAK/C,8BAzGzC,GAAyBoD,IAAMC,WCZXC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d0d54df0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PageHeader, Tabs, Button, Statistic, Descriptions } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Line } from \"@ant-design/charts\";\n\nconst findIntersection = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n  var px =\n    ((x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)) /\n    ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n  var py =\n    ((x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)) /\n    ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n\n  // console.log(px, py)\n  return { px, py };\n};\n\nconst Position: React.FC = (props) => {\n  // var priceAtExpiration = 29.0;\n  //\n\n  const low = props.sellOptionStrike * 0.5;\n  const high = props.buyOptionStrike * 1.5;\n\n  const valueAtExpiration = (price) => {\n    return (\n      (-(price > props.sellOptionStrike ? price - props.sellOptionStrike : 0) +\n        (price > props.buyOptionStrike ? price - props.buyOptionStrike : 0)) *\n        100 +\n      (props.sellOptionPrice - props.butOptionPrice) * 100.0\n    );\n  };\n\n  const makeData = () => {\n    var array = [];\n    for (var price = low * 100; price < high * 100; ++price) {\n      let myprice = price / 100.0;\n\n      array.push({\n        price: myprice.toString(),\n        value: valueAtExpiration(myprice),\n      });\n    }\n    return array;\n  };\n\n  var yourCredit = (props.sellOptionPrice - props.butOptionPrice) * 100.0;\n  var maxLossWithCredit =\n    -(props.buyOptionStrike - props.sellOptionStrike) * 100.0 +\n    (props.sellOptionPrice - props.butOptionPrice) * 100.0;\n\n  var x = findIntersection(\n    0,\n    0,\n    1000,\n    0,\n    props.sellOptionStrike,\n    yourCredit,\n    props.buyOptionStrike,\n    maxLossWithCredit\n  );\n\n  var config = {\n    data: makeData(),\n    height: 800,\n    xField: \"price\",\n    yField: \"value\",\n    annotations: [\n      {\n        type: \"line\",\n        // start: ['min', 'median'],\n        start: [\"min\", 0],\n        end: [\"max\", 0],\n        // end: ['max', 'median'],\n        style: {\n          stroke: \"#F4664A\",\n          lineDash: [2, 2],\n        },\n      },\n    ],\n  };\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header-responsive\"\n        onBack={() => {}}\n        title=\"Title\"\n        subTitle=\"This is a subtitle\"\n      >\n        <Descriptions size=\"medium\" column={2}>\n          <Descriptions.Item label=\"Sell Option Strike\">\n            {props.sellOptionStrike}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Sell Option Price\">\n            {props.sellOptionPrice}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Buy Option Strike\">\n            {props.buyOptionStrike}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"But Option Price\">\n            {props.butOptionPrice}\n          </Descriptions.Item>\n\n          <Descriptions.Item label=\"Breakeven\">{x.px}</Descriptions.Item>\n        </Descriptions>\n\n        <br />\n\n        <h3>Full Dollar Values</h3>\n        <br />\n        <Descriptions size=\"medium\" column={1}>\n          <Descriptions.Item label=\"Max Loss At Expiration\">\n            {(props.buyOptionStrike - props.sellOptionStrike) * 100.0}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Your Credit\">\n            {(props.sellOptionPrice - props.butOptionPrice) * 100.0}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Max Loss With Credit\">\n            {-(props.buyOptionStrike - props.sellOptionStrike) * 100.0 +\n              (props.sellOptionPrice - props.butOptionPrice) * 100.0}\n          </Descriptions.Item>\n        </Descriptions>\n\n        {/*        <br />\n        <Descriptions size=\"large\" column={1}>\n          <Descriptions.Item label=\"Owed\">\n            {priceAtExpiration > props.sellOptionStrike\n              ? (priceAtExpiration - props.sellOptionStrike) * 100\n              : 0}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Gained\">\n            {priceAtExpiration > props.buyOptionStrike\n              ? (priceAtExpiration - props.buyOptionStrike) * 100\n              : 0}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Net At Expiration\">\n            {(-(priceAtExpiration > props.sellOptionStrike\n              ? priceAtExpiration - props.sellOptionStrike\n              : 0) +\n              (priceAtExpiration > props.buyOptionStrike\n                ? priceAtExpiration - props.buyOptionStrike\n                : 0)) *\n              100}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Net At Expiration Including Credit\">\n            {valueAtExpiration(priceAtExpiration)}\n          </Descriptions.Item>\n        </Descriptions>*/}\n        {/*\n        {\n          makeData().map((data, index)=>{\n            return <div>{data.price} {data.value}</div>\n          })\n        }*/}\n        <Line {...config} />\n      </PageHeader>\n    </>\n  );\n};\nexport default Position;\n","import React, { useEffect } from \"react\";\n// import DemoDualAxes from \"./Chart.js\";\nimport Position from \"./Position.js\";\nimport { Input, Tooltip, Card, Row, Col } from \"antd\";\nimport { InfoCircleOutlined, UserOutlined } from \"@ant-design/icons\";\n\nimport { Form, InputNumber, Button } from \"antd\";\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 16 },\n};\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    email: \"${label} is not a valid email!\",\n    number: \"${label} is not a valid number!\",\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\",\n  },\n};\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sellOptionStrike = null; // 5000;\n    this.sellOptionPrice = null; // 21.18;\n    this.buyOptionStrike = null; // 1.85;\n    this.butOptionPrice = null; // 20;\n  }\n\n  onFinish = (values) => {\n    this.sellOptionStrike = values.st;\n    this.sellOptionPrice = values.op;\n    this.buyOptionStrike = values.bl;\n    this.butOptionPrice = values.cp;\n\n    if (\n      this.sellOptionStrike &&\n      this.sellOptionPrice &&\n      this.buyOptionStrike &&\n      this.butOptionPrice\n    ) {\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Row gutter={16}>\n          <Col className=\"gutter-row\" span={24}>\n            <Card>\n              <Form\n                {...layout}\n                initialValues={{\n                  st: 20.1,\n                  op: 1.4,\n                  bl: 21.1,\n                  cp: 1.3,\n                }}\n                name=\"nest-messages\"\n                onFinish={this.onFinish}\n              >\n                <Form.Item name=\"st\" label=\"Sell Option Strike\">\n                  <InputNumber\n                    formatter={(value) =>\n                      `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                    }\n                    // prefix=\"$\"\n                    // suffix=\"USD\"\n                  />\n                </Form.Item>\n                <Form.Item name=\"op\" label=\"Sell Option Price\">\n                  <InputNumber\n                    formatter={(value) =>\n                      `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                    }\n                    // prefix=\"$\"\n                    // suffix=\"USD\"\n                  />\n                </Form.Item>\n\n                <Form.Item name=\"bl\" label=\"Buy Option Strike\">\n                  <InputNumber\n                    formatter={(value) =>\n                      `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                    }\n                    // prefix=\"$\"\n                    // suffix=\"USD\"\n                  />\n                </Form.Item>\n                <Form.Item name=\"cp\" label=\"Buy Option Price\">\n                  <InputNumber\n                    formatter={(value) =>\n                      `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                    }\n                    //p refix=\"$\"\n                    //. suffix=\"USD\"\n                  />\n                </Form.Item>\n\n                {/*\n                <Form.Item name=\"minx\" label=\"Min x\">\n                  <InputNumber prefix=\"$\" suffix=\"USD\" />\n                </Form.Item>\n                <Form.Item name=\"maxx\" label=\"Max x\">\n                  <InputNumber prefix=\"$\" suffix=\"USD\" />\n                </Form.Item>\n*/}\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Card>\n            <br />\n            <Card>\n              {this.sellOptionStrike &&\n                this.sellOptionPrice &&\n                this.buyOptionStrike &&\n                this.butOptionPrice && (\n                  <Position\n                    sellOptionStrike={this.sellOptionStrike}\n                    sellOptionPrice={this.sellOptionPrice}\n                    buyOptionStrike={this.buyOptionStrike}\n                    butOptionPrice={this.butOptionPrice}\n                  />\n                )}\n              {/*            {\n              this.balance && this.currentPrice && this.optPrice && this.strikePrice &&\n              <DemoDualAxes\n                balance={this.balance}\n                currentPrice={this.currentPrice}\n                strike={this.strikePrice}\n                costOfOption={this.optPrice}\n              />\n            }*/}\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}